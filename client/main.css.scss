@charset "utf-8";
@viewport {width: device-width;}

//
// General variables

$font-size-multiplier: 16/16;
$line: 1.382rem;

$row-count: 9;
$col-count: 17;
$board-fill-ratio: 100;
$board-height-ratio: $row-count/$col-count;

$x-unit: 100% / $col-count;
$y-unit: 100% / $row-count;

$star-count: 37;
$star-step:   1; // Also in space.js.coffee
$star-step-1: 2;
$star-step-2: 3;

$grid-border-width: 1px;

$main-easing:        cubic-bezier(0.236, 0.000, 0.236, 1.000);
$reverse-easing:     cubic-bezier(0.618, 0.000, 0.236, 1.000);
$loop-easing:        ease-in-out;

$main-time: 300ms;
$short-time: 124ms;
$loop-time: $main-time*144;
$warp-time: $main-time*2;

//
// Colors

$hue: 45;
$hue-increment: 1.618;

$hue-1:  $hue + (360/$hue-increment) *  1;
$hue-2:  $hue + (360/$hue-increment) *  2;
$hue-3:  $hue + (360/$hue-increment) *  3;
$hue-4:  $hue + (360/$hue-increment) *  4;
$hue-5:  $hue + (360/$hue-increment) *  5;
$hue-6:  $hue + (360/$hue-increment) *  6;
$hue-7:  $hue + (360/$hue-increment) *  7;
$hue-8:  $hue + (360/$hue-increment) *  8;
$hue-9:  $hue + (360/$hue-increment) *  9;
$hue-10: $hue + (360/$hue-increment) * 10;
$hue-11: $hue + (360/$hue-increment) * 11;
$hue-12: $hue + (360/$hue-increment) * 12;
$hue-13: $hue + (360/$hue-increment) * 13;

$background:      hsl($hue-1, 14.6%, 5.6%);
$off-background:  hsl($hue-1, 38.2%, 14.6%);
$card-background: hsl($hue-1, 50%, 9%);

$bright: hsl($hue, 23.6%, 76.4%);
$body:   hsl($hue, 5.6%, 61.8%);
$dim:    hsl($hue, 3.4%, 50%);

$purple-bright: hsl($hue-1, 23.6%, 76.4%);
$purple-body:   hsl($hue-1, 14.6%, 61.8%);
$purple-dim:    hsl($hue-1, 9%, 50%);

$yellow: hsl($hue,   50%, 61.8%);
$orange: hsl($hue-8, 50%, 50%);
$red:    hsl($hue-3, 38.2%, 50.0%);
$blue:   hsl($hue-4, 50%, 60%);
$cyan:   hsl($hue-7, 38.2%, 50.0%);
$green:  hsl($hue-2, 23.6%, 50.0%);
$purple: hsl($hue-1, 50.0%, 66.6%);

$shadow: hsl($hue-1, 50%, 5.6%);
$border: hsl($hue-1, 9%, 41.4%);

$highlight: hsl($hue, 76.4%, 61.8%);
$purple-highlight: hsl($hue-1, 38.2%, 50%);
$blue-highlight: hsl($hue-4, 91%, 66.6%);

$shadow: hsla($hue-1, 50%, 5.6%, 0.236);

//
// Media queries

$xs2:  "#{317 / 16 * 1em}";
$xs:   "#{318 / 16 * 1em}";
$s:    "#{478 / 16 * 1em}";
$m:    "#{560 / 16 * 1em}";
$l:    "#{740 / 16 * 1em}";
$xl:   "#{960 / 16 * 1em}";
$xl2: "#{1100 / 16 * 1em}";
$xl3: "#{1200 / 16 * 1em}";
$xl4: "#{1400 / 16 * 1em}";
$xl5: "#{1700 / 16 * 1em}";
$xl6: "#{1900 / 16 * 1em}";
$xl7: "#{2300 / 16 * 1em}";

$retina: "(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)";

//
// Imports

@import "reset";

//
// Font families

html {
  font-family: sans-serif;
}

//
// Basic styles

html {
  font-size: 100% * $font-size-multiplier;
  line-height: $line / 1rem;
  background: $background;
  color: $body;
  -webkit-tap-highlight-color: hsla($hue-1, 100%, 61.8%, 0.5);
}

body {

}

a {
  color: hsl($hue-2, 85.4%, 61.8%);
  text-decoration: none;

  &:hover {
    color: hsl($hue-3, 85.4%, 61.8%);
  }

  &:active {
    color: hsl($hue-4, 85.4%, 61.8%);
  }
}

h1, h2, h3, h4, h5, h6,
strong, b {
  color: hsl($hue, 23.6%, 76.4%);
}

hr {
  border-color: hsl($hue-1, 9%, 23.6%);
}

code {
  color: hsl($hue-1, 14.6%, 61.8%);
}

::selection {
  background: hsl($hue-2, 91%, 61.8%);
}

::placeholder {
  color: hsl($hue, 9%, 50%);
}

.abs-all   { position: absolute; left: 0; top: 0; right: 0; bottom: 0; }

.abs-left   { position: absolute; top: 0; bottom: 0; left:  0; }
.abs-right  { position: absolute; top: 0; bottom: 0; right: 0; }

.abs-top    { position: absolute; left: 0; right: 0; top:    0; }
.abs-bottom { position: absolute; left: 0; right: 0; bottom: 0; }

.abs-top-left   { position: absolute; top: 0; left:  0; }
.abs-top-right  { position: absolute; top: 0; right: 0; }

.abs-bottom-left   { position: absolute; bottom: 0; left:  0; }
.abs-bottom-right  { position: absolute; bottom: 0; right: 0; }

/////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////

html, body {
  height: 100%;
  margin: 0;
  position: relative;
  overflow: hidden;
}

.game {
  perspective: 162vh;
  margin: 0;
}

.grid-container {
  width: $board-fill-ratio * 1vw;
  max-width: $board-fill-ratio * 1vh / $board-height-ratio;
  margin: auto;
}

.grid {
  transform-style: preserve-3d;
  transform-origin: bottom;
  margin: auto;
  width: 100%;
  height: 0;
  padding-top: 100% * $board-height-ratio;
}

//
// Backdrop

.layers {
  // animation: starSway $loop-time $loop-easing infinite;
}

@keyframes starSway {
  0%, 100% {
    transform: translate3d(0,0,0);
  }
  25% {
    transform: translate3d(1.3%, 1.3%, 0);
  }
  50% {
    transform: translate3d(-1.3%, 1.3%, 0);
  }
  75% {
    transform: translate3d(-1.3%, -1.3%, 0);
  }
}

.backdrop-color {
  background-color: rgba(blue, 0.056);
}

.layer {
  will-change: transform, left, top;
  transform: translate3d(0,0,0);
  width: 100%;
  height: 100%;
  transition:
    all 0ms linear,
    transform $warp-time $main-easing
  ;
  background-size: 100% 100%;
}

.layer-left   { margin-left: -100vw; }
.layer-right  { margin-left:  100vw; }
.layer-top    { margin-top:  -100vh; }
.layer-bottom { margin-top:   100vh; }

.layer-top-left  { margin-top: -100vh; margin-left: -100vw; }
.layer-top-right { margin-top: -100vh; margin-left:  100vw; }

.layer-bottom-left  { margin-top: 100vh; margin-left: -100vw; }
.layer-bottom-right { margin-top: 100vh; margin-left:  100vw; }

.layer-1 {
  $layer-1-gradients: ();
  @for $i from 1 through $star-count {
    $layer-1-gradients: $layer-1-gradients, radial-gradient(circle $star-step*1px   at (random(100)*1% + random(100)/100*1%) (random(100)*1% + random(100)/100*1%), $dim 99%, transparent);
  }
  background-image: $layer-1-gradients;
}

.layer-2 {
  $layer-2-gradients: ();
  @for $i from 1 through $star-count/$star-step-1 {
    $layer-2-gradients: $layer-2-gradients, radial-gradient(circle $star-step-1*1px at (random(100)*1% + random(100)/100*1%) (random(100)*1% + random(100)/100*1%), $body 99%, transparent);
  }
  background-image: $layer-2-gradients;
}

.layer-3 {
  $layer-3-gradients: ();
  @for $i from 1 through $star-count/$star-step-2 {
    $layer-3-gradients: $layer-3-gradients, radial-gradient(circle $star-step-2*1px at (random(100)*1% + random(100)/100*1%) (random(100)*1% + random(100)/100*1%), $bright 99%, transparent);
  }
  background-image: $layer-3-gradients;
}

//
// Offsettable objects

.entity {
  margin: auto;
  width: $x-unit;
  height: $y-unit;
  will-change: transform, opacity;
  transition: transform $warp-time $main-easing;
}

//
// Fleets

.fleet {
  .warp & {

  }
}

.player-fleet {
  transition-duration: $short-time;
  transform: scale(1);

  .warp & {
    transform: scale(0.146);
  }
}

.fleet-model {
  margin: auto;
  width: 20%;
  height: 20%;
  background: $purple;
  transition: all $short-time $main-easing;
  will-change: transform;
  transform: scale(1);

  .player-fleet & {
    background: $red;
  }

  .warp .player-fleet & {
    background: $bright;
  }
}

.star {

}

.star-model {
  width: 50%;
  height: 50%;
  left: 50%; top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  box-shadow: 0 0 5vmin currentcolor;
  background-image: radial-gradient(circle, transparent 50%, hsla(0,0%,100%, 0.5));
}

//
// Rendering effects

.rendering-in {
  // opacity: 0;
}

//
// Fleet controls

.movement-controls {
  width: $x-unit;
  height: $y-unit;
  margin: auto;
  visibility: visible;
  transition: visibility 0ms linear $main-time;

  .warp & {
    visibility: hidden;
    transition-delay: 0ms;
  }
}

button.move {
  position: absolute;
  display: block;
  // border: 1px solid rgba($green, 0.056);
  width: 100%;
  height: 100%;
  outline: none;

  &:hover {
    border: 2px solid rgba($green, 0.854);
  }

  &:active {
    border-color: transparent;
  }
}

//
// Debug dialog

.debug-dialog {
  position: absolute;
  left: 61.8%; top: 61.8%;
  width: 261.8%;
  font-size: 0.625rem;
  text-shadow:
     1px  1px 1px rgba(#000, 0.5),
    -1px -1px 1px rgba(#000, 0.5),
    -1px  1px 1px rgba(#000, 0.5),
     1px -1px 1px rgba(#000, 0.5),
     0px -1px 1px rgba(#000, 0.5),
     0px  1px 1px rgba(#000, 0.5),
    -1px  0px 1px rgba(#000, 0.5),
     1px  0px 1px rgba(#000, 0.5)
  ;
}

.debug-line {
  white-space: nowrap;
}

//
// Game header

.game-header {
  z-index: 10;
}

//
// Cheats

.cheats {
  padding: $line*0.5;
}

button.button {
  font-size: 0.75rem;
  border: 1px solid currentcolor;
  padding: $line*0.125 $line*0.25;
  border-radius: $line*0.125;
  outline: none;

  &:hover {
    color: $green;
  }

  &:active {
    color: $bright;
  }
}
